<snippet>
	<content><![CDATA[
var express = require('express');

const ${1:Model} = require("../../models/${2:model}")

var router = express.Router();

router.get("/", function(req, res) {
	${1:Model}.find({}, function (err, collection) {
		res.json(collection)
	})
})

router.post("/", function(req, res) {
	${1:Model}.create(req.body, function (err, collection) {
		res.json(collection)
	})
})

router.put("/", function(req, res) {

})

router.patch("/", function(req, res) {

})

router.delete("/", function(req, res) {

})

router.get("/:id", function(req, res) {
	${1:Model}.findById(req.params.id, function (err, collection) {
		res.json(collection)
	})
})

router.post("/:id", function(req, res) {

})

router.put("/:id", function(req, res) {
	${1:Model}.findByIdAndUpdate(req.params.id, req.body, function (err, collection) {
		res.json(collection)
	})
})

router.patch("/:id", function(req, res) {
	${1:Model}.findByIdAndUpdate(req.params.id, req.body, function (err, collection) {
		res.json(collection)
	})
})

router.delete("/:id", function(req, res) {
	${1:Model}.findByIdAndRemove(req.params.id, function (err, collection) {
		res.json(collection)
	})
})

module.exports = router;

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>router</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.js</scope>
</snippet>
